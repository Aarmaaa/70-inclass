{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aarmaan\\\\Documents\\\\New folder\\\\react\\\\class\\\\70\\\\BarCodeScanner\\\\screens\\\\BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { version } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              if (_this.state.buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (_this.state.buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal'\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }\n        }, React.createElement(Image, {\n          sorce: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          placeholder: \"Book Id\",\n          style: styles.inputBox,\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: this.getCameraPermissions(\"BookId\"),\n          style: styles.scanButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }, \"Scan\")), React.createElement(TextInput, {\n          placeholder: \"Student Id\",\n          style: styles.inputBox,\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: this.getCameraPermissions(\"StudentId\"),\n          style: styles.scanButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        }, \"Scan\"))));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Aarmaan/Documents/New folder/react/class/70/BarCodeScanner/screens/BookTransactionScreen.js"],"names":["React","version","Permissions","BarCodeScanner","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","inputView","inputBox","scanButton","buttonText","Component","create","flex","justifyContent","alignItems","displayText","fontSize","textDecorationLine","backgroundColor","padding","margin","borderWidth","borderRightWidth","flexDirection"],"mappings":"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","sourcesContent":["import React, { version } from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet,TextInput } from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n//import { TextInput } from 'react-native-gesture-handler';\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        hasCameraPermissions: null,\r\n        scanned: false,\r\n        scannedBookId: '',\r\n        scannedStudentId: '',\r\n        buttonState: 'normal'\r\n      }\r\n    }\r\n\r\n    getCameraPermissions = async (id) =>{\r\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n      \r\n      this.setState({\r\n        /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n        hasCameraPermissions: status === \"granted\",\r\n        buttonState: id,\r\n        scanned: false\r\n      });\r\n    }\r\n\r\n    handleBarCodeScanned = async({type, data})=>{\r\n      \r\n      if(this.state.buttonState===\"BookId\"){\r\n        \r\n        this.setState({\r\n          scanned: true,\r\n          scannedBookId: data,\r\n          buttonState: 'normal'\r\n        });\r\n      }\r\n\r\n     else if(this.state.buttonState===\"StudentId\"){\r\n        \r\n        this.setState({\r\n          scanned: true,\r\n          scannedStudentId: data,\r\n          buttonState: 'normal'\r\n        });\r\n      }\r\n      \r\n      \r\n\r\n    }\r\n\r\n    render() {  \r\n      const hasCameraPermissions = this.state.hasCameraPermissions;\r\n      const scanned = this.state.scanned;\r\n      const buttonState = this.state.buttonState;\r\n\r\n      if (buttonState !== \"normal\" && hasCameraPermissions){\r\n        return(\r\n          <BarCodeScanner\r\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n            style={StyleSheet.absoluteFillObject}\r\n          />\r\n        );\r\n      }\r\n\r\n      else if (buttonState === \"normal\"){\r\n        return(\r\n          <View style={styles.container}>\r\n\r\n          <View>\r\n            <Image sorce={require(\"../assets/booklogo.jpg\")} style={{ width: 200, height: 200 }} />\r\n          </View>\r\n            <View style = {styles.inputView}>\r\n\r\n              <TextInput placeholder=\"Book Id\" style={styles.inputBox} value={this.state.scannedBookId}/>\r\n\r\n              <TouchableOpacity\r\n                onPress={this.getCameraPermissions(\"BookId\")}\r\n                style={styles.scanButton}>\r\n                <Text style={styles.buttonText}>Scan</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TextInput placeholder=\"Student Id\" style={styles.inputBox} value={this.state.scannedStudentId}/>\r\n\r\n              <TouchableOpacity\r\n                onPress={this.getCameraPermissions(\"StudentId\")}\r\n                style={styles.scanButton}>\r\n                <Text style={styles.buttonText}>Scan</Text>\r\n              </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n\r\n        </View>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    displayText:{\r\n      fontSize: 15,\r\n      textDecorationLine: 'underline'\r\n    },\r\n    scanButton:{\r\n      backgroundColor: '#2196F3',\r\n      padding: 10,\r\n      margin: 10\r\n    },\r\n    buttonText:{\r\n      fontSize: 20,\r\n    },\r\n\r\n    inputBox: {\r\n      width: 200,\r\n      height: 40,\r\n      borderWidth: 1.5,\r\n      borderRightWidth: 0,\r\n      fontSize: 20\r\n    },\r\n    inputView:{\r\n      flexDirection: 'row',\r\n      margin: 20\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}